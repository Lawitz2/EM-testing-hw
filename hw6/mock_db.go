// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/lawitz2/em-testing-hw/hw5 (interfaces: DB)
//
// Generated by this command:
//
//	mockgen -destination mock_db.go -package hw5 . DB
//

// Package hw5 is a generated GoMock package.
package hw6

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDB is a mock of DB interface.
type MockDB struct {
	ctrl     *gomock.Controller
	recorder *MockDBMockRecorder
	isgomock struct{}
}

// MockDBMockRecorder is the mock recorder for MockDB.
type MockDBMockRecorder struct {
	mock *MockDB
}

// NewMockDB creates a new mock instance.
func NewMockDB(ctrl *gomock.Controller) *MockDB {
	mock := &MockDB{ctrl: ctrl}
	mock.recorder = &MockDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDB) EXPECT() *MockDBMockRecorder {
	return m.recorder
}

// AddToDb mocks base method.
func (m *MockDB) AddToDb(u User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToDb", u)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToDb indicates an expected call of AddToDb.
func (mr *MockDBMockRecorder) AddToDb(u any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToDb", reflect.TypeOf((*MockDB)(nil).AddToDb), u)
}

// DeleteFromDb mocks base method.
func (m *MockDB) DeleteFromDb(userName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFromDb", userName)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFromDb indicates an expected call of DeleteFromDb.
func (mr *MockDBMockRecorder) DeleteFromDb(userName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFromDb", reflect.TypeOf((*MockDB)(nil).DeleteFromDb), userName)
}
